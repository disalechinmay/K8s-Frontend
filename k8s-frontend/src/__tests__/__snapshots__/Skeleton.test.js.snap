// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Skeleton Tests Check if ErrorPage renders when errorSet is true. 1`] = `
<Skeleton>
  <ErrorPage
    errorDescription={
      Object {
        "errorDescription": "Something went wrong while retrieving namespaces!",
        "errorSuggestions": Array [
          "Make sure the backend service is up and running.",
          "Make sure the endpoint being accessed is valid.",
        ],
      }
    }
  >
    <div
      className="error-page"
    >
      <div
        className="error-page-content"
      >
        <h1
          className="oops"
        >
          OOPS!
        </h1>
        <span
          className="message"
        >
          Things seem to be broken a bit.
        </span>
        <br />
        <br />
        <span
          className="font-weight-bold"
        >
          Error: 
        </span>
        <span>
          Something went wrong while retrieving namespaces!
        </span>
        <br />
        <br />
        <span
          className="font-weight-bold"
        >
          Suggestions: 
        </span>
        <br />
        <span>
          Make sure the backend service is up and running.
          <br
            key="0_SUGGESTION"
          />
          Make sure the endpoint being accessed is valid.
          <br
            key="1_SUGGESTION"
          />
        </span>
        <span
          className="logo"
        >
          Symphonize
        </span>
      </div>
    </div>
  </ErrorPage>
</Skeleton>
`;

exports[`Skeleton Tests Check if loading page renders correctly. 1`] = `
<Skeleton>
  <LoadingPage>
    <div
      className="loading-page"
    >
      <div
        className="loading-page-content"
      >
        <span
          className="loader"
        >
          <Loader
            color="#ecf0f1"
            css=""
            loading={true}
            size="5em"
          >
            <EmotionCssPropInternal
              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
              css={
                Array [
                  Object {
                    "map": undefined,
                    "name": "1oyc5ch",
                    "next": undefined,
                    "styles": "
      position: relative;
      width: 5em;
      height: 5em;
    ",
                    "toString": [Function],
                  },
                  "",
                ]
              }
            >
              <div
                className="css-8ytart"
              >
                <EmotionCssPropInternal
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  css={
                    Object {
                      "map": undefined,
                      "name": "1vpk80i",
                      "next": Object {
                        "name": "animation-zodxwl",
                        "next": undefined,
                        "styles": "@keyframes animation-zodxwl{
  0% {transform: rotate(0deg)}
  50% {transform: rotate(180deg)}
  100% {transform: rotate(360deg)}
}",
                      },
                      "styles": "
      position: absolute;
      height: 5em;
      width: 5em;
      border: 1px solid #ecf0f1;
      border-radius: 100%;
      transition: 2s;
      border-bottom: none;
      border-right: none;
      top: 0%;
      left: 0%;
      animation-fill-mode: \\"\\";
      animation: animation-zodxwl 1s 0s infinite linear;
    ",
                      "toString": [Function],
                    }
                  }
                >
                  <div
                    className="css-1vpk80i"
                  />
                </EmotionCssPropInternal>
                <EmotionCssPropInternal
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  css={
                    Object {
                      "map": undefined,
                      "name": "pwsp8i",
                      "next": Object {
                        "name": "animation-zodxwl",
                        "next": undefined,
                        "styles": "@keyframes animation-zodxwl{
  0% {transform: rotate(0deg)}
  50% {transform: rotate(180deg)}
  100% {transform: rotate(360deg)}
}",
                      },
                      "styles": "
      position: absolute;
      height: 4.5em;
      width: 4.5em;
      border: 1px solid #ecf0f1;
      border-radius: 100%;
      transition: 2s;
      border-bottom: none;
      border-right: none;
      top: 1.75%;
      left: 0.875%;
      animation-fill-mode: \\"\\";
      animation: animation-zodxwl 1s 0.2s infinite linear;
    ",
                      "toString": [Function],
                    }
                  }
                >
                  <div
                    className="css-pwsp8i"
                  />
                </EmotionCssPropInternal>
                <EmotionCssPropInternal
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  css={
                    Object {
                      "map": undefined,
                      "name": "1lcb3ax",
                      "next": Object {
                        "name": "animation-zodxwl",
                        "next": undefined,
                        "styles": "@keyframes animation-zodxwl{
  0% {transform: rotate(0deg)}
  50% {transform: rotate(180deg)}
  100% {transform: rotate(360deg)}
}",
                      },
                      "styles": "
      position: absolute;
      height: 4em;
      width: 4em;
      border: 1px solid #ecf0f1;
      border-radius: 100%;
      transition: 2s;
      border-bottom: none;
      border-right: none;
      top: 3.5%;
      left: 1.75%;
      animation-fill-mode: \\"\\";
      animation: animation-zodxwl 1s 0.4s infinite linear;
    ",
                      "toString": [Function],
                    }
                  }
                >
                  <div
                    className="css-1lcb3ax"
                  />
                </EmotionCssPropInternal>
                <EmotionCssPropInternal
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  css={
                    Object {
                      "map": undefined,
                      "name": "8qzkbb",
                      "next": Object {
                        "name": "animation-zodxwl",
                        "next": undefined,
                        "styles": "@keyframes animation-zodxwl{
  0% {transform: rotate(0deg)}
  50% {transform: rotate(180deg)}
  100% {transform: rotate(360deg)}
}",
                      },
                      "styles": "
      position: absolute;
      height: 3.5em;
      width: 3.5em;
      border: 1px solid #ecf0f1;
      border-radius: 100%;
      transition: 2s;
      border-bottom: none;
      border-right: none;
      top: 5.249999999999999%;
      left: 2.6249999999999996%;
      animation-fill-mode: \\"\\";
      animation: animation-zodxwl 1s 0.6000000000000001s infinite linear;
    ",
                      "toString": [Function],
                    }
                  }
                >
                  <div
                    className="css-8qzkbb"
                  />
                </EmotionCssPropInternal>
                <EmotionCssPropInternal
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  css={
                    Object {
                      "map": undefined,
                      "name": "1ewkqe9",
                      "next": Object {
                        "name": "animation-zodxwl",
                        "next": undefined,
                        "styles": "@keyframes animation-zodxwl{
  0% {transform: rotate(0deg)}
  50% {transform: rotate(180deg)}
  100% {transform: rotate(360deg)}
}",
                      },
                      "styles": "
      position: absolute;
      height: 3em;
      width: 3em;
      border: 1px solid #ecf0f1;
      border-radius: 100%;
      transition: 2s;
      border-bottom: none;
      border-right: none;
      top: 7%;
      left: 3.5%;
      animation-fill-mode: \\"\\";
      animation: animation-zodxwl 1s 0.8s infinite linear;
    ",
                      "toString": [Function],
                    }
                  }
                >
                  <div
                    className="css-1ewkqe9"
                  />
                </EmotionCssPropInternal>
              </div>
            </EmotionCssPropInternal>
          </Loader>
        </span>
        <span
          className="message"
        >
          Loading
        </span>
        <span
          className="logo"
        >
          Symphonize
        </span>
      </div>
    </div>
  </LoadingPage>
</Skeleton>
`;

exports[`Skeleton Tests Check if skeleton renders correctly. 1`] = `
<Skeleton>
  <div
    className="mainContainer"
  >
    <div
      className="sidebar"
    >
      <div
        className="sidebar-title"
        onClick={[Function]}
      >
        Symphonize
      </div>
      <div
        className="sidebar-namespace-picker"
      >
        <div
          className="namespace-picker"
        >
          <select
            className="namespace-selector"
            onChange={[Function]}
          >
            <option
              key="default_NAMESPACE"
              value="default"
            >
              default
            </option>
            <option
              key="docker_NAMESPACE"
              value="docker"
            >
              docker
            </option>
            <option
              key="kube-node-lease_NAMESPACE"
              value="kube-node-lease"
            >
              kube-node-lease
            </option>
            <option
              key="kube-public_NAMESPACE"
              value="kube-public"
            >
              kube-public
            </option>
            <option
              key="kube-system_NAMESPACE"
              value="kube-system"
            >
              kube-system
            </option>
            <option
              key="kubernetes-dashboard_NAMESPACE"
              value="kubernetes-dashboard"
            >
              kubernetes-dashboard
            </option>
          </select>
        </div>
        <div
          className="namespace-picker-title"
        >
          Namespace
        </div>
      </div>
      <div
        className="sidebar-section-title"
      >
        Resources
      </div>
      <div
        className="sidebar-button"
        id="nodes_sidebarOption"
        key="0_SIDEBAR_BUTTON"
        onClick={[Function]}
      >
        <span
          className="fa fa-desktop"
          onClick={null}
        />
          
        Nodes
      </div>
      <div
        className="sidebar-button"
        id="pods_sidebarOption"
        key="1_SIDEBAR_BUTTON"
        onClick={[Function]}
      >
        <span
          className="fa fa-archive"
          onClick={null}
        />
          
        Pods
      </div>
      <div
        className="sidebar-button"
        id="deployments_sidebarOption"
        key="2_SIDEBAR_BUTTON"
        onClick={[Function]}
      >
        <span
          className="fa fa-cubes"
          onClick={null}
        />
          
        Deployments
      </div>
      <div
        className="sidebar-button"
        id="services_sidebarOption"
        key="3_SIDEBAR_BUTTON"
        onClick={[Function]}
      >
        <span
          className="fa fa-random"
          onClick={null}
        />
          
        Services
      </div>
      <div
        className="sidebar-button"
        id="jobs_sidebarOption"
        key="4_SIDEBAR_BUTTON"
        onClick={[Function]}
      >
        <span
          className="fa fa-tasks"
          onClick={null}
        />
          
        Jobs
      </div>
      <div
        className="sidebar-button"
        id="cronJobs_sidebarOption"
        key="5_SIDEBAR_BUTTON"
        onClick={[Function]}
      >
        <span
          className="fa fa-clock-o"
          onClick={null}
        />
          
        Cron Jobs
      </div>
      <div
        className="sidebar-button"
        id="configMaps_sidebarOption"
        key="6_SIDEBAR_BUTTON"
        onClick={[Function]}
      >
        <span
          className="fa fa-gears"
          onClick={null}
        />
          
        Config Maps
      </div>
      <div
        className="sidebar-button"
        id="secrets_sidebarOption"
        key="7_SIDEBAR_BUTTON"
        onClick={[Function]}
      >
        <span
          className="fa fa-user-secret"
          onClick={null}
        />
          
        Secrets
      </div>
      <SearchBar
        refreshState={[Function]}
        renderSearchPage={[Function]}
        sendTokens={[Function]}
      >
        <div
          className="sidebar-search"
          contentEditable="true"
          onBlur={[Function]}
          onClick={[Function]}
          onInput={[Function]}
          suppressContentEditableWarning="true"
        >
          Search Resources..
        </div>
      </SearchBar>
    </div>
    <div
      className="mainContent"
      id="mainContent"
    >
      <HomePage
        namespace="default"
        refreshState={[Function]}
      >
        <div
          className="pie-chart-flex"
        >
          <span
            className="pie-chart"
          >
            <ReactMinimalPieChart
              animate={true}
              animationDuration={500}
              animationEasing="ease-out"
              cx={50}
              cy={50}
              data={
                Array [
                  Object {
                    "color": "#2ecc71",
                    "title": "Running Pods",
                    "value": 9,
                  },
                  Object {
                    "color": "#dd5135",
                    "title": "Non-Running Pods",
                    "value": 2,
                  },
                ]
              }
              label={true}
              labelPosition={50}
              labelStyle={
                Object {
                  "fontFamily": "sans-serif",
                  "fontSize": "10px",
                }
              }
              lengthAngle={360}
              lineWidth={15}
              paddingAngle={0}
              radius={25}
              rounded={true}
              startAngle={0}
              viewBoxSize={
                Array [
                  100,
                  100,
                ]
              }
            >
              <div>
                <svg
                  height="100%"
                  style={
                    Object {
                      "display": "block",
                    }
                  }
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <ReactMinimalPieChartPath
                    cx={50}
                    cy={50}
                    fill="none"
                    key="0"
                    lengthAngle={294.5454545454546}
                    lineWidth={3.75}
                    radius={25}
                    reveal={100}
                    startAngle={0}
                    stroke="#2ecc71"
                    strokeLinecap="round"
                    style={
                      Object {
                        "transition": "stroke-dashoffset 500ms ease-out",
                      }
                    }
                    title="Running Pods"
                  >
                    <path
                      d="M 73.125 50 A 23.125 23.125 0 1 1 59.60647217566865 28.964760107426777"
                      fill="none"
                      stroke="#2ecc71"
                      strokeDasharray={118.88072200515924}
                      strokeDashoffset={0}
                      strokeLinecap="round"
                      strokeWidth={3.75}
                      style={
                        Object {
                          "transition": "stroke-dashoffset 500ms ease-out",
                        }
                      }
                    >
                      <title>
                        Running Pods
                      </title>
                    </path>
                  </ReactMinimalPieChartPath>
                  <ReactMinimalPieChartPath
                    cx={50}
                    cy={50}
                    fill="none"
                    key="1"
                    lengthAngle={65.45454545454545}
                    lineWidth={3.75}
                    radius={25}
                    reveal={100}
                    startAngle={294.5454545454546}
                    stroke="#dd5135"
                    strokeLinecap="round"
                    style={
                      Object {
                        "transition": "stroke-dashoffset 500ms ease-out",
                      }
                    }
                    title="Non-Running Pods"
                  >
                    <path
                      d="M 59.60647217566865 28.964760107426777 A 23.125 23.125 0 0 1 73.125 50.000000000000036"
                      fill="none"
                      stroke="#dd5135"
                      strokeDasharray={26.417938223368715}
                      strokeDashoffset={0}
                      strokeLinecap="round"
                      strokeWidth={3.75}
                      style={
                        Object {
                          "transition": "stroke-dashoffset 500ms ease-out",
                        }
                      }
                    >
                      <title>
                        Non-Running Pods
                      </title>
                    </path>
                  </ReactMinimalPieChartPath>
                  <ReactMinimalPieChartLabel
                    color="#2ecc71"
                    data={
                      Array [
                        Object {
                          "color": "#2ecc71",
                          "degrees": 294.5454545454546,
                          "percentage": 81.81818181818183,
                          "startOffset": 0,
                          "title": "Running Pods",
                          "value": 9,
                        },
                        Object {
                          "color": "#dd5135",
                          "degrees": 65.45454545454545,
                          "percentage": 18.181818181818183,
                          "startOffset": 294.5454545454546,
                          "title": "Non-Running Pods",
                          "value": 2,
                        },
                      ]
                    }
                    dataIndex={0}
                    dx={-10.51566916038977}
                    dy={6.758010218194962}
                    key="label-0"
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                        "fontSize": "10px",
                      }
                    }
                    textAnchor="start"
                    x={50}
                    y={50}
                  >
                    <text
                      dominantBaseline="middle"
                      dx={-10.51566916038977}
                      dy={6.758010218194962}
                      fill="#2ecc71"
                      style={
                        Object {
                          "fontFamily": "sans-serif",
                          "fontSize": "10px",
                        }
                      }
                      textAnchor="start"
                      x={50}
                      y={50}
                    >
                      9
                    </text>
                  </ReactMinimalPieChartLabel>
                  <ReactMinimalPieChartLabel
                    color="#dd5135"
                    data={
                      Array [
                        Object {
                          "color": "#2ecc71",
                          "degrees": 294.5454545454546,
                          "percentage": 81.81818181818183,
                          "startOffset": 0,
                          "title": "Running Pods",
                          "value": 9,
                        },
                        Object {
                          "color": "#dd5135",
                          "degrees": 65.45454545454545,
                          "percentage": 18.181818181818183,
                          "startOffset": 294.5454545454546,
                          "title": "Non-Running Pods",
                          "value": 2,
                        },
                      ]
                    }
                    dataIndex={1}
                    dx={10.515669160389777}
                    dy={-6.75801021819495}
                    key="label-1"
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                        "fontSize": "10px",
                      }
                    }
                    textAnchor="end"
                    x={50}
                    y={50}
                  >
                    <text
                      dominantBaseline="middle"
                      dx={10.515669160389777}
                      dy={-6.75801021819495}
                      fill="#dd5135"
                      style={
                        Object {
                          "fontFamily": "sans-serif",
                          "fontSize": "10px",
                        }
                      }
                      textAnchor="end"
                      x={50}
                      y={50}
                    >
                      2
                    </text>
                  </ReactMinimalPieChartLabel>
                </svg>
                <span
                  className="pie-label"
                >
                  Pods
                </span>
              </div>
            </ReactMinimalPieChart>
          </span>
          <span
            className="pie-chart"
          >
            <ReactMinimalPieChart
              animate={true}
              animationDuration={500}
              animationEasing="ease-out"
              cx={50}
              cy={50}
              data={
                Array [
                  Object {
                    "color": "#2ecc71",
                    "title": "Running Deployments",
                    "value": 2,
                  },
                  Object {
                    "color": "#dd5135",
                    "title": "Non-Running Deployments",
                    "value": 1,
                  },
                ]
              }
              label={true}
              labelPosition={50}
              labelStyle={
                Object {
                  "fontFamily": "sans-serif",
                  "fontSize": "10px",
                }
              }
              lengthAngle={360}
              lineWidth={15}
              paddingAngle={0}
              radius={25}
              rounded={true}
              startAngle={0}
              viewBoxSize={
                Array [
                  100,
                  100,
                ]
              }
            >
              <div>
                <svg
                  height="100%"
                  style={
                    Object {
                      "display": "block",
                    }
                  }
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <ReactMinimalPieChartPath
                    cx={50}
                    cy={50}
                    fill="none"
                    key="0"
                    lengthAngle={239.99999999999997}
                    lineWidth={3.75}
                    radius={25}
                    reveal={100}
                    startAngle={0}
                    stroke="#2ecc71"
                    strokeLinecap="round"
                    style={
                      Object {
                        "transition": "stroke-dashoffset 500ms ease-out",
                      }
                    }
                    title="Running Deployments"
                  >
                    <path
                      d="M 73.125 50 A 23.125 23.125 0 1 1 38.437499999999986 29.97316253748486"
                      fill="none"
                      stroke="#2ecc71"
                      strokeDasharray={96.86577348568527}
                      strokeDashoffset={1.4210854715202004e-14}
                      strokeLinecap="round"
                      strokeWidth={3.75}
                      style={
                        Object {
                          "transition": "stroke-dashoffset 500ms ease-out",
                        }
                      }
                    >
                      <title>
                        Running Deployments
                      </title>
                    </path>
                  </ReactMinimalPieChartPath>
                  <ReactMinimalPieChartPath
                    cx={50}
                    cy={50}
                    fill="none"
                    key="1"
                    lengthAngle={119.99999999999999}
                    lineWidth={3.75}
                    radius={25}
                    reveal={100}
                    startAngle={239.99999999999997}
                    stroke="#dd5135"
                    strokeLinecap="round"
                    style={
                      Object {
                        "transition": "stroke-dashoffset 500ms ease-out",
                      }
                    }
                    title="Non-Running Deployments"
                  >
                    <path
                      d="M 38.437499999999986 29.97316253748486 A 23.125 23.125 0 0 1 73.125 49.99999999999997"
                      fill="none"
                      stroke="#dd5135"
                      strokeDasharray={48.43288674284263}
                      strokeDashoffset={7.105427357601002e-15}
                      strokeLinecap="round"
                      strokeWidth={3.75}
                      style={
                        Object {
                          "transition": "stroke-dashoffset 500ms ease-out",
                        }
                      }
                    >
                      <title>
                        Non-Running Deployments
                      </title>
                    </path>
                  </ReactMinimalPieChartPath>
                  <ReactMinimalPieChartLabel
                    color="#2ecc71"
                    data={
                      Array [
                        Object {
                          "color": "#2ecc71",
                          "degrees": 239.99999999999997,
                          "percentage": 66.66666666666666,
                          "startOffset": 0,
                          "title": "Running Deployments",
                          "value": 2,
                        },
                        Object {
                          "color": "#dd5135",
                          "degrees": 119.99999999999999,
                          "percentage": 33.33333333333333,
                          "startOffset": 239.99999999999997,
                          "title": "Non-Running Deployments",
                          "value": 1,
                        },
                      ]
                    }
                    dataIndex={0}
                    dx={-6.249999999999997}
                    dy={10.825317547305485}
                    key="label-0"
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                        "fontSize": "10px",
                      }
                    }
                    textAnchor="start"
                    x={50}
                    y={50}
                  >
                    <text
                      dominantBaseline="middle"
                      dx={-6.249999999999997}
                      dy={10.825317547305485}
                      fill="#2ecc71"
                      style={
                        Object {
                          "fontFamily": "sans-serif",
                          "fontSize": "10px",
                        }
                      }
                      textAnchor="start"
                      x={50}
                      y={50}
                    >
                      2
                    </text>
                  </ReactMinimalPieChartLabel>
                  <ReactMinimalPieChartLabel
                    color="#dd5135"
                    data={
                      Array [
                        Object {
                          "color": "#2ecc71",
                          "degrees": 239.99999999999997,
                          "percentage": 66.66666666666666,
                          "startOffset": 0,
                          "title": "Running Deployments",
                          "value": 2,
                        },
                        Object {
                          "color": "#dd5135",
                          "degrees": 119.99999999999999,
                          "percentage": 33.33333333333333,
                          "startOffset": 239.99999999999997,
                          "title": "Non-Running Deployments",
                          "value": 1,
                        },
                      ]
                    }
                    dataIndex={1}
                    dx={6.249999999999992}
                    dy={-10.825317547305488}
                    key="label-1"
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                        "fontSize": "10px",
                      }
                    }
                    textAnchor="end"
                    x={50}
                    y={50}
                  >
                    <text
                      dominantBaseline="middle"
                      dx={6.249999999999992}
                      dy={-10.825317547305488}
                      fill="#dd5135"
                      style={
                        Object {
                          "fontFamily": "sans-serif",
                          "fontSize": "10px",
                        }
                      }
                      textAnchor="end"
                      x={50}
                      y={50}
                    >
                      1
                    </text>
                  </ReactMinimalPieChartLabel>
                </svg>
              </div>
            </ReactMinimalPieChart>
            <span
              className="pie-label"
            >
              Deployments
            </span>
          </span>
          <span
            className="pie-chart"
          >
            <ReactMinimalPieChart
              animate={true}
              animationDuration={500}
              animationEasing="ease-out"
              cx={50}
              cy={50}
              data={
                Array [
                  Object {
                    "color": "#2ecc71",
                    "title": "Running Jobs",
                    "value": 2,
                  },
                  Object {
                    "color": "#dd5135",
                    "title": "Non-Running Jobs",
                    "value": 0,
                  },
                ]
              }
              label={true}
              labelPosition={50}
              labelStyle={
                Object {
                  "fontFamily": "sans-serif",
                  "fontSize": "10px",
                }
              }
              lengthAngle={360}
              lineWidth={15}
              paddingAngle={0}
              radius={25}
              rounded={true}
              startAngle={0}
              viewBoxSize={
                Array [
                  100,
                  100,
                ]
              }
            >
              <div>
                <svg
                  height="100%"
                  style={
                    Object {
                      "display": "block",
                    }
                  }
                  viewBox="0 0 100 100"
                  width="100%"
                >
                  <ReactMinimalPieChartPath
                    cx={50}
                    cy={50}
                    fill="none"
                    key="0"
                    lengthAngle={360}
                    lineWidth={3.75}
                    radius={25}
                    reveal={100}
                    startAngle={0}
                    stroke="#2ecc71"
                    strokeLinecap="round"
                    style={
                      Object {
                        "transition": "stroke-dashoffset 500ms ease-out",
                      }
                    }
                    title="Running Jobs"
                  >
                    <path
                      d="M 73.125 50 A 23.125 23.125 0 1 1 73.12499999647787 49.9995963926105"
                      fill="none"
                      stroke="#2ecc71"
                      strokeDasharray={145.29866022852792}
                      strokeDashoffset={0}
                      strokeLinecap="round"
                      strokeWidth={3.75}
                      style={
                        Object {
                          "transition": "stroke-dashoffset 500ms ease-out",
                        }
                      }
                    >
                      <title>
                        Running Jobs
                      </title>
                    </path>
                  </ReactMinimalPieChartPath>
                  <ReactMinimalPieChartPath
                    cx={50}
                    cy={50}
                    fill="none"
                    key="1"
                    lengthAngle={0}
                    lineWidth={3.75}
                    radius={25}
                    reveal={100}
                    startAngle={360}
                    stroke="#dd5135"
                    strokeLinecap="round"
                    style={
                      Object {
                        "transition": "stroke-dashoffset 500ms ease-out",
                      }
                    }
                    title="Non-Running Jobs"
                  >
                    <path
                      d=""
                      fill="none"
                      stroke="#dd5135"
                      strokeDasharray={0}
                      strokeDashoffset={0}
                      strokeLinecap="round"
                      strokeWidth={3.75}
                      style={
                        Object {
                          "transition": "stroke-dashoffset 500ms ease-out",
                        }
                      }
                    >
                      <title>
                        Non-Running Jobs
                      </title>
                    </path>
                  </ReactMinimalPieChartPath>
                  <ReactMinimalPieChartLabel
                    color="#2ecc71"
                    data={
                      Array [
                        Object {
                          "color": "#2ecc71",
                          "degrees": 360,
                          "percentage": 100,
                          "startOffset": 0,
                          "title": "Running Jobs",
                          "value": 2,
                        },
                        Object {
                          "color": "#dd5135",
                          "degrees": 0,
                          "percentage": 0,
                          "startOffset": 360,
                          "title": "Non-Running Jobs",
                          "value": 0,
                        },
                      ]
                    }
                    dataIndex={0}
                    dx={-12.5}
                    dy={1.5308084989341915e-15}
                    key="label-0"
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                        "fontSize": "10px",
                      }
                    }
                    textAnchor="start"
                    x={50}
                    y={50}
                  >
                    <text
                      dominantBaseline="middle"
                      dx={-12.5}
                      dy={1.5308084989341915e-15}
                      fill="#2ecc71"
                      style={
                        Object {
                          "fontFamily": "sans-serif",
                          "fontSize": "10px",
                        }
                      }
                      textAnchor="start"
                      x={50}
                      y={50}
                    >
                      2
                    </text>
                  </ReactMinimalPieChartLabel>
                  <ReactMinimalPieChartLabel
                    color="#dd5135"
                    data={
                      Array [
                        Object {
                          "color": "#2ecc71",
                          "degrees": 360,
                          "percentage": 100,
                          "startOffset": 0,
                          "title": "Running Jobs",
                          "value": 2,
                        },
                        Object {
                          "color": "#dd5135",
                          "degrees": 0,
                          "percentage": 0,
                          "startOffset": 360,
                          "title": "Non-Running Jobs",
                          "value": 0,
                        },
                      ]
                    }
                    dataIndex={1}
                    dx={12.5}
                    dy={-3.061616997868383e-15}
                    key="label-1"
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                        "fontSize": "10px",
                      }
                    }
                    textAnchor="end"
                    x={50}
                    y={50}
                  >
                    <text
                      dominantBaseline="middle"
                      dx={12.5}
                      dy={-3.061616997868383e-15}
                      fill="#dd5135"
                      style={
                        Object {
                          "fontFamily": "sans-serif",
                          "fontSize": "10px",
                        }
                      }
                      textAnchor="end"
                      x={50}
                      y={50}
                    >
                      0
                    </text>
                  </ReactMinimalPieChartLabel>
                </svg>
              </div>
            </ReactMinimalPieChart>
            <span
              className="pie-label"
            >
              Jobs
            </span>
          </span>
        </div>
      </HomePage>
    </div>
  </div>
</Skeleton>
`;
