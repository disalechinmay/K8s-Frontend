{
	"namespaces": {
		"payLoad": ["default", "kube-node-lease", "kube-public", "kube-system"],
		"status": "SUCCESS",
		"statusDetails": "Returning a list of namespaces present in the cluster."
	},
	"nodes": {
		"payLoad": [
			{
				"nodeAnnotations": {
					"kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/dockershim.sock",
					"node.alpha.kubernetes.io/ttl": "0",
					"volumes.kubernetes.io/controller-managed-attach-detach": "true"
				},
				"nodeCapacity": {
					"cpu": "4",
					"ephemeral-storage": "34471692Ki",
					"hugepages-1Gi": "0",
					"hugepages-2Mi": "0",
					"memory": "3963180Ki",
					"pods": "110"
				},
				"nodeLabels": {
					"beta.kubernetes.io/arch": "amd64",
					"beta.kubernetes.io/os": "linux",
					"kubernetes.io/arch": "amd64",
					"kubernetes.io/hostname": "minikube",
					"kubernetes.io/os": "linux",
					"node-role.kubernetes.io/master": ""
				},
				"nodeName": "minikube"
			}
		],
		"status": "SUCCESS",
		"statusDetails": "Returning a list of nodes present in the cluster."
	},
	"pods": {
		"payLoad": [
			{
				"podAnnotations": null,
				"podContainers": ["disalechinmay/flask_load_testing:latest"],
				"podLabels": {
					"app": "flask",
					"pod-template-hash": "5f7fc6b5d9"
				},
				"podName": "flask-deployment-5f7fc6b5d9-8mg8p",
				"podStatus": "Running"
			},
			{
				"podAnnotations": null,
				"podContainers": ["disalechinmay/flask_load_testing:latest"],
				"podLabels": {
					"app": "flask",
					"pod-template-hash": "5f7fc6b5d9"
				},
				"podName": "flask-deployment-5f7fc6b5d9-gwptr",
				"podStatus": "Running"
			},
			{
				"podAnnotations": null,
				"podContainers": ["disalechinmay/flask_load_testing:latest"],
				"podLabels": {
					"app": "flask",
					"pod-template-hash": "5f7fc6b5d9"
				},
				"podName": "flask-deployment-5f7fc6b5d9-lrqqs",
				"podStatus": "Running"
			}
		],
		"status": "SUCCESS",
		"statusDetails": "Returning a list of pods in 'default' namespace."
	},
	"deployments": {
		"payLoad": [
			{
				"deploymentAnnotations": {
					"deployment.kubernetes.io/revision": "1",
					"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"flask-deployment\",\"namespace\":\"default\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"flask\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"flask\"}},\"spec\":{\"containers\":[{\"image\":\"disalechinmay/flask_load_testing:latest\",\"name\":\"flask-container\",\"ports\":[{\"containerPort\":5000}]}]}}}}\n"
				},
				"deploymentLabels": {
					"environment": "unsecure"
				},
				"deploymentName": "flask-deployment",
				"deploymentReadyReplicas": 3,
				"deploymentReplicas": 3,
				"deploymentSelectors": {
					"app": "flask"
				},
				"deploymentTemplateContainers": [
					"disalechinmay/flask_load_testing:latest"
				],
				"deploymentTemplateLabels": {
					"app": "flask"
				}
			}
		],
		"status": "SUCCESS",
		"statusDetails": "Returning a list of deployments in 'default' namespace."
	},
	"servicesx": {
		"payLoad": [
			{
				"serviceAnnotations": {
					"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"flask-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":4000,\"protocol\":\"TCP\",\"targetPort\":5000}],\"selector\":{\"app\":\"flask\"},\"type\":\"LoadBalancer\"}}\n"
				},
				"serviceLabels": null,
				"serviceName": "flask-service",
				"servicePort": [4000],
				"serviceSelectors": {
					"app": "flask"
				},
				"serviceTargetPort": [5000],
				"serviceType": "LoadBalancer"
			},
			{
				"serviceAnnotations": null,
				"serviceLabels": {
					"component": "apiserver",
					"provider": "kubernetes"
				},
				"serviceName": "kubernetes",
				"servicePort": [443],
				"serviceSelectors": null,
				"serviceTargetPort": [8443],
				"serviceType": "ClusterIP"
			}
		],
		"status": "SUCCESS",
		"statusDetails": "Returning a list of services of 'default' namespace."
	},
	"jobs": {
		"payLoad": [
			{
				"jobAnnotations": {
					"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1\",\"kind\":\"Job\",\"metadata\":{\"annotations\":{},\"name\":\"pi\",\"namespace\":\"default\"},\"spec\":{\"backoffLimit\":4,\"template\":{\"spec\":{\"containers\":[{\"command\":[\"perl\",\"-Mbignum=bpi\",\"-wle\",\"print bpi(2000)\"],\"image\":\"perl\",\"name\":\"pi\"}],\"restartPolicy\":\"Never\"}}}}\n"
				},
				"jobCurrentCompletions": 1,
				"jobLabels": {
					"controller-uid": "c5f81b40-5885-11ea-a236-00155d013401",
					"job-name": "pi"
				},
				"jobName": "pi",
				"jobTargetCompletions": 1,
				"jobTemplate": ["perl"]
			},
			{
				"jobAnnotations": {
					"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1\",\"kind\":\"Job\",\"metadata\":{\"annotations\":{},\"name\":\"pi2\",\"namespace\":\"default\"},\"spec\":{\"backoffLimit\":4,\"template\":{\"spec\":{\"containers\":[{\"command\":[\"echo\",\"HelloWorld\"],\"image\":\"alpine\",\"name\":\"linux\"}],\"restartPolicy\":\"Never\"}}}}\n"
				},
				"jobCurrentCompletions": 1,
				"jobLabels": {
					"controller-uid": "1d1cda2e-5888-11ea-a236-00155d013401",
					"job-name": "pi2"
				},
				"jobName": "pi2",
				"jobTargetCompletions": 1,
				"jobTemplate": ["alpine"]
			}
		],
		"status": "SUCCESS",
		"statusDetails": "Returning data from /jobs endpoint."
	}
}
